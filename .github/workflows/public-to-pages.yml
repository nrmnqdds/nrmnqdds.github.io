name: Publish to GitHub Pages

on:
  push:
    branches: ["main"]

env:
  NODE_AUTH_TOKEN: ${{ secrets.PAGES_DEPLOYMENT }}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      - name: Detect package manager 👻
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            echo "::set-output name=runner::yarn"
            exit 0
          elif [ -f "${{ github.workspace }}/bun.lockb" ]; then
            echo "::set-output name=manager::bun"
            echo "::set-output name=command::install"
            echo "::set-output name=runner::bun run"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            echo "::set-output name=runner::npx --no-install"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Bun 🍉
        uses: oven-sh/setup-bun@v1
        with:
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          bun-version: latest

      - name: Setup Pages 🔧
        id: pages
        uses: actions/configure-pages@v1
        with:
          static_site_generator: next
      - name: Restore cache 💾
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb', '**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb', '**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies 🥑
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js 🍄
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Static HTML export with Next.js 🥯
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: Upload artifact ⛱️
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v1
